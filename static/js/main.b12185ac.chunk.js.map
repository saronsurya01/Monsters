{"version":3,"sources":["logo.svg","components/Card/Card.jsx","components/Card-List/Card-List.jsx","components/Search-Feild/Search-Feild.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","name","id","email","CardList","map","monster","SearchFeild","type","onChange","event","updateState","target","value","placeholder","App","state","monsters","searchFeild","fetch","then","response","json","arr","setState","this","newMonsters","filter","toLowerCase","includes","style","fontStyle","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAAe,I,wBCGFA,EAAK,SAACC,GACf,OAAO,sBAAKC,UAAU,iBAAf,UACP,qBAAKC,IAAI,KACT,qBAAKA,IAAG,+BAA0BF,EAAMG,KAAKC,GAArC,4BACR,6BAAKJ,EAAMG,KAAKA,OAChB,4BAAIH,EAAMG,KAAKE,YCJNC,EAAS,SAAUN,GAC5B,OAAO,qBAAKC,UAAU,YAAf,SACND,EAAMG,KAAKI,KAAI,SAACC,GAAD,OAAW,cAAC,EAAD,CAAML,KAAMK,UCJ9BC,G,MAAY,SAACT,GACtB,OAAS,8BAAK,uBAAOC,UAAU,SAASS,KAAMV,EAAMU,KAAKA,KAAMC,SAAU,SAACC,GAEtEZ,EAAMa,YAAYD,EAAME,OAAOC,QAC5BC,YAAahB,EAAMU,KAAKM,kBCsCpBC,E,kDApCf,aAAc,IAAD,8BACX,gBACKC,MAAM,CACTC,SAAS,GACTC,YAAY,IAJH,E,qDASb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAASF,MAAK,SAAAG,GAAG,OAAE,EAAKC,SAAS,CAACP,SAASM,S,oBAKtE,WAAS,IAAD,OAEN,EAA6BE,KAAKT,MAA3BC,EAAP,EAAOA,SAASC,EAAhB,EAAgBA,YAEVQ,EAAaT,EAASU,QAAO,SAACrB,GAAD,OAAWA,EAAQL,KAAK2B,cAAcC,SAASX,EAAYU,kBAQ9F,OAAS,sBAAK7B,UAAU,MAAf,UACT,oBAAI+B,MAAO,CAACC,UAAU,eAAtB,8BACA,cAAC,EAAD,CAAavB,KARE,CACbA,KAAK,SACLM,YAAY,kBAMeH,YAAa,SAACE,GAAD,OAAS,EAAKW,SAAS,CAACN,YAAYL,OAC9E,cAAC,EAAD,CAAUZ,KAAMyB,W,GAjCAM,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b12185ac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './Card.css';\r\n\r\nexport const Card=(props)=>{\r\n    return <div className=\"card-container\">\r\n    <img src=\"\" ></img>\r\n    <img src={`https://robohash.org/${props.name.id}?set=set2&size=180x180`}></img>\r\n    <h2>{props.name.name}</h2>\r\n    <p>{props.name.email}</p>\r\n    </div>\r\n}","import React from 'react'\r\nimport './Card-List.css'\r\nimport { Card } from '../Card/Card'\r\n\r\nexport const CardList=function (props){\r\n    return <div className=\"card-list\"> \r\n    {props.name.map((monster)=><Card name={monster}/>)}\r\n    \r\n    </div>\r\n}\r\n","import React from 'react';\r\nimport './Search-Feild.css'\r\nexport const SearchFeild=(props)=>{\r\n    return   <div><input className=\"search\" type={props.type.type} onChange={(event)=>\r\n    {\r\n        props.updateState(event.target.value)\r\n        }} placeholder={props.type.placeholder}/></div>\r\n\r\n        \r\n\r\n}","import React,{Component} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport { CardList } from './components/Card-List/Card-List';\nimport {SearchFeild} from './components/Search-Feild/Search-Feild';\n\nclass App extends Component{\n\nconstructor(){\n  super();\n  this.state={\n    monsters:[],\n    searchFeild:''\n  }\n  \n}\n\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response=>response.json()) .then(arr=>this.setState({monsters:arr}))\n};\n\n\n\nrender(){\n\n  const {monsters,searchFeild}=this.state;\n\n  const newMonsters= monsters.filter((monster)=>monster.name.toLowerCase().includes(searchFeild.toLowerCase()))\n  \n  const property={\n    type:\"search\",\n    placeholder:\"Search Monster\"\n  }\n  \n   \n  return   <div className=\"App\">\n  <h1 style={{fontStyle:'Monster Kit'}}>MONSTERS ROLEDEX</h1>\n  <SearchFeild type={property} updateState={(value)=>this.setState({searchFeild:value})}/>\n  <CardList name={newMonsters}/>\n  </div>\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}